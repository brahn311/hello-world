Video_06
Las clases predefinidas y construídas

Del punto, nacen tres clases predefinidas por la sintaxis de Regex

Clases predefinidas:

Digito
\d
(back slash + d minuscula)

Palabra
\w
Cualquier caracter dentro de una palabra, incluido numeros y el guion bajo (_)

Espacios
\s
Incluye el espacio simple, tabulador (caracter o doble espacio)

Por ejemplo en la carpeta:
regex\liners.txt
Realiza las busquedas:
\d
\d\d\d
\w
\s

Clases construídas:
Permite hacer busquedas mas potentes y mas especificas
[]
[0-9] Identico a \d
[a-z] Solo letras minusculas (excluye letras acentuadas y con tildes)
[a-zA-Z] Solo letras mayusculas y minusculas (excluye letras acentuadas y con tildes)
[a-zA-Z0-9_] Identico a \w

Gracias a ello, inferimos que:
[0-2]
El guion (-) es usado para especificar rangos y extiende la expresion
[a-zA-Z0-9_]
Pueden contener varias expresiones una tras otra (sin separadores)

Operador para escapar un wildcard (usar como caracter y no como operador)
\
En caso de querer incluir el punto (.) no como wildcard, sino como caracter
[a-zA-Z0-9_\.]
Esto explica porque \d\w\s no son reconocidos como letras

RETO:
Construir una clase para identificar "hexadecimales"

NOTA:
El archivo liners.txt me toma como un espacio el restante del salto de linea

TESTEAR:
Otras clases:
\t -> "tabulador"
\r -> "retorno de carro" o "regreso al inicio" (el lugar en que la línea vuelve a iniciar)
\n -> "nueva línea" (donde una línea da inicio) en sistemas Unix
\r -> "nueva línea" en Mac_OS clásico
\r\n -> "nueva línea" combinación necesaria en Windows
\a -> "campana" o "beep" se produce al imprimir este carácter
\e -> "Esc" o "Escape"
\f -> salto de página
\v -> tabulador vertical
\A -> Marca la posición inicio de la cadena
\Z -> Marca la posición final de la cadena
\b -> Marca la posición de una palabra limitada por: espacios en blanco, puntuación o el inicio/final de una cadena
\B -> Marca la posición entre dos caracteres alfanuméricos o dos no-alfanuméricos
\x -> Para representar caracteres ASCII o ANSI con su código si se busca el símbolo de derechos de autor y la fuente en la que se busca utiliza el conjunto de caracteres Latin-1 es posible encontrarlo utilizando "\xA9"
\u -> Para representar caracteres Unicode si se conoce su código "\u00A2" representa el símbolo de centavos No todos los motores de Expresiones Regulares soportan Unicode El Net Framework lo hace, pero el EditPad Pro no, por ejemplo
