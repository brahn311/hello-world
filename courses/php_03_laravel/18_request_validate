Video_18
Validaciones

Validaremos el formulario y incluiremos los mensajes de error

En el caso de que el usuario envie un formulario vacio
Para que temer un minimo de caracteres
Para eliminar el error y dar salida html y evitar la pantalla del debug

En el archivo:
app\Http\Controller\ExpenseReportController.php
Ubicamos el metodo:
store
Decretamos la validacion antes de instanciar:
$report 
Agregamos:
$validData = $request->validate([
	'title' => 'required'
]);
Esto filtra las validaciones y retorna al formulario en caso de error

Laravel ya genera automaticamente un objeto llamado $errors con varios errores

Pero aun no nos muestra ningun aviso del error
Para ello, en nuestro template:
resource\views\expenseReports\create.blade.php
Antes del:
<form>
Añadimos:
@if($errors->any())
    <div class="alert alert-danger">
		Error
    </div>
@endif
Con esto ya mostramos la palabra error cuando ocurra un error al validar

Pero modemos mostrar mensajes detallados
cada mensaje se almacena dentro del objeto $errors
Ahora en vez de mostrar:
Error
Lo sustituimos por
<ul>
    @foreach($errors->all() as $error)
        <li>{{ $error }}</li>
    @endforeach
</ul>

Tambien podemos añadir mas validaciones
En el arreglo dentro de ValidData:
'title' => 'required'
Podemos añadir mas validaciones usando el operador
|
quedando de la siguiente manera
'title' => 'required|min:3'
Esto coloca condicion que title debe tener minimo 3 caracteres
Tambien puedes consultar otras validaciones en la documentacion de Laravel

En caso de que se generen errores y se recarge la pagina se pierden todos los campos introducidos por el usuario
Para ello en el input usamos el atributo value="" pero con un auxiliar de laravel llamado old('name')
Quedando de la siguiente manera:
 value="{{ old('title') }}"

TAREA: 
- Hacer las validaciones en edit
