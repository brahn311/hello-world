Video_15
CSRF

CSRF 
Cross-site request forgery
Tipo de ataque que consiste en que un usuario puede intentar hacer muchas peticiones en nombre de otro

Para esto Laravel genera con cada sesión un token que se usará para validar:
- Que exista el usuario en el sistema
- Que sea él quien está haciendo la petición

Esto también implica que no se pueden hacer peticiones desde otra app hacia el post
Debe manejarse de manera interna.

Si queremos que un form pueda pasar la seguridad CSRF de Laravel
Debemos agregar el helper:
@csrf
El cual nos agrega un input oculto con un token generado por Laravel

Cuando estamos guardando nuevas entradas en la base de datos podemos
redireccionar adonde queramos en nuestra aplicación con una respuesta especial de Laravel llamada:
redirect

Estos son Middlewares los cuales son muy usados en aplicaciones web consisten en capas que contienen el request
Cuando llega un request, éste deberá pasar por distintos middlewares (capas o filtros) 
Estos Middlewares al final regresarán una respuesta 
Cada uno de estos Middlewares puede detener las peticiones en caso de que algo no se cumpla.

Si no se desea usar la protección CSRF se puede directamente quitar el Middleware desde el archivo kernel.php 
De la misma manera se pueden crear middleware propios y agregarlos.

Para agregar el helper lo hacemos en el template
resources\views\expenseReport\create.blade.php
Debemos añadirlo dentro del formulario
@csrf

Ahora en el controller:
app\Http\Controllers\ExpenseReportController.php
Añadimos
$report = new ExpenseReport();
$report->title = $request->get('title');
$report->save();
return redirect('/expense_reports');









