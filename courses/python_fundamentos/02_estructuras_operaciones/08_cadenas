# Cadenas
Las cadenas se emplean cuando se requiere procesar texto como: nombres de cualquier tipo, direcciones, novelas, etc. no números o calculos matematicos.

- Las cadenas requieren comillas de la misma manera como los flotantes necesitan punto decimal.
  Ejemplo de una cadena: `"Yo soy una cadena."`

### Cadenas con Comillas:
Sin embargo ¿Cómo se puede codificar una comilla dentro de una cadena que ya está delimitada por comillas?

Supongamos que se desea mostrar un muy sencillo mensaje: `Me gusta  "Monty Python"`
¿Cómo se puede hacer esto sin generar un error? Existen dos posibles soluciones.

- La primera se basa en el concepto ya conocido del carácter de escape, el cual recordarás se utiliza empleando la diagonal invertida.  
  La diagonal invertida `\` puede también escapar de la comilla. Una comilla precedida por una diagonal invertida cambia su significado, no es un limitador, simplemente es una comilla.
  ```
  print("Me gusta \"Monty Python\"")
  ```

- La segunda solución puede ser un poco sorprendente. Python puede utilizar una apóstrofe en lugar de una comilla. Cualquiera de estos dos caracteres puede delimitar una cadena, pero para ello se debe ser consistente.

  - Si se delimita una cadena con una comilla, se debe cerrar con una comilla.
  - Si se inicia una cadena con un apóstrofe, se debe terminar con un apóstrofe.

  Este ejemplo funcionará también:
  ```
  print('Me gusta "Monty Python"')
  ```
  Igual aplica para mostrar apostrofes en cadenas con comillas
  ```
  print('I\'m Monty Python.')
  print("I'm Monty Python.")
  ```

### Cadena vacía:  
Una cadena puede estar vacía, puede no contener caracter alguno.
- `''`
- `""`
